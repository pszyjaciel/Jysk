package jysk;


/**
* jysk/_ControllerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from jysk.idl
* czwartek, 12 grudzieñ 2013 10:31:55 CET
*/

public class _ControllerStub extends org.omg.CORBA.portable.ObjectImpl implements jysk.Controller
{

  public boolean addArticle (jysk.Article art)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addArticle", true);
                jysk.ArticleHelper.write ($out, art);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addArticle (art        );
            } finally {
                _releaseReply ($in);
            }
  } // addArticle

  public boolean addPallet (jysk.Pallet pal)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addPallet", true);
                jysk.PalletHelper.write ($out, pal);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addPallet (pal        );
            } finally {
                _releaseReply ($in);
            }
  } // addPallet

  public jysk.Article getArticle (int articleid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getArticle", true);
                $out.write_long (articleid);
                $in = _invoke ($out);
                jysk.Article $result = jysk.ArticleHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getArticle (articleid        );
            } finally {
                _releaseReply ($in);
            }
  } // getArticle

  public jysk.Pallet getPallet (int palletid)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPallet", true);
                $out.write_long (palletid);
                $in = _invoke ($out);
                jysk.Pallet $result = jysk.PalletHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPallet (palletid        );
            } finally {
                _releaseReply ($in);
            }
  } // getPallet

  public jysk.Article[] getArtList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getArtList", true);
                $in = _invoke ($out);
                jysk.Article $result[] = jysk.ControllerPackage.artSequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getArtList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getArtList

  public jysk.Pallet[] getPalList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getPalList", true);
                $in = _invoke ($out);
                jysk.Pallet $result[] = jysk.ControllerPackage.palSequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getPalList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getPalList

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:jysk/Controller:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ControllerStub
